{"version":3,"sources":["Player.js","PlayerList.js","PlayerLists.js","TimmiesApp.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","state","gamesplayed","goals","loadPlayerData","bind","goalspergame","this","axios","post","playerInfo","firstName","lastName","then","response","console","log","Component","PlayerList","players","map","player","index","PlayerLists","sets","set","id","TimmiesApp","loading","errorMessage","loadData","setState","data","catch","src","alt","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA4CeA,E,kDAxCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,YAAa,EACbC,MAAQ,GAGZ,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATL,E,qDAYnB,WACIE,KAAKH,mB,4BAGT,WACoBI,IAAMC,KAAK,0JAA4JF,KAAKP,MAAMU,WAAWC,UAAY,MAAQJ,KAAKP,MAAMU,WAAWE,SAAW,UAC1PC,MAAK,SAACC,GACVC,QAAQC,IAAI,eACZD,QAAQC,IAAIF,Q,0BAKpB,WACI,OAA+B,IAA3BP,KAAKN,MAAMC,YACJ,EAGAK,KAAKN,MAAME,MAAQI,KAAKN,MAAMC,c,oBAK7C,WACI,OAAO,gCAAMK,KAAKP,MAAMU,WAAWC,UAA5B,IAAwCJ,KAAKP,MAAMU,WAAWE,SAA9D,QAA6EL,KAAKN,MAAMC,YAAxF,OAAyGK,KAAKN,MAAME,MAApH,UAAmII,KAAKD,sB,GArClIW,aCgBNC,E,kDAfX,WAAYlB,GAAQ,uCACVA,G,0CAGV,WACI,OAAQ,6BAEAO,KAAKP,MAAMmB,QAAQC,KAAI,SAACC,EAAQC,GAC5B,OAAQ,6BAAI,cAAC,EAAD,CAAQZ,WAAYW,e,GAT3BJ,aC0BVM,E,kDAzBX,WAAYvB,GAAQ,uCACVA,G,0CAGV,WACI,OACI,gCACI,gDACA,6BAEQO,KAAKP,MAAMwB,KAAKJ,KAAI,SAACK,GACjB,OACI,+BACA,uCAAUA,EAAIC,MACd,cAAC,EAAD,CAAYP,QAASM,EAAIN,yB,GAf/BF,aCiDXU,E,kDA/CX,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT2B,SAAS,EACTJ,KAAM,GACNK,aAAc,IAGlB,EAAKC,SAAW,EAAKA,SAASzB,KAAd,gBATD,E,qDAYnB,WACIU,QAAQC,IAAI,qBACZT,KAAKuB,a,sBAGT,WAAY,IAAD,OACStB,IAAMC,KAAK,oEACnBI,MAAK,SAACC,GACV,EAAKiB,SAAS,CAAEP,KAAMV,EAASkB,KAAKR,KAAMI,SAAS,OAElDK,OAAM,WACH,EAAKF,SAAS,CAAEF,aAAc,8B,oBAI1C,WAgBI,OAZItB,KAAKN,MAAM2B,QACD,8BAAK,qBAAKM,IAAI,+DAA+DC,IAAI,iBAEtF5B,KAAKN,MAAM4B,aACN,8BAAMtB,KAAKN,MAAM4B,eAErBtB,KAAKN,MAAMuB,KAIP,8BAAK,cAAC,EAAD,CAAaA,KAAMjB,KAAKN,MAAMuB,SAHnC,wD,GAvCGP,aCaVmB,MAdf,WACE,OACI,sBAAKC,UAAU,MAAf,UAEI,wDAGA,8BACI,cAAC,EAAD,UCCCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.918432d3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gamesplayed: 0,\r\n            goals : 0,\r\n        }\r\n\r\n        this.loadPlayerData = this.loadPlayerData.bind(this);\r\n        this.goalspergame = this.goalspergame.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPlayerData();\r\n    }\r\n\r\n    loadPlayerData() {\r\n        const promise = axios.post(\"https://api.nhle.com/stats/rest/en/skater/summary?cayenneExp=gameTypeId=2%20and%20seasonId%3E=20202021%20and%20skaterFullName%20likeIgnoreCase%20%22%25\" + this.props.playerInfo.firstName + \"%20\" + this.props.playerInfo.lastName + \"%25%22\");\r\n        promise.then((response) => {\r\n            console.log(\"player data\");\r\n            console.log(response);\r\n            //this.setState({ gamesplayed: response.data, goals: false });\r\n        })\r\n    }\r\n\r\n    goalspergame() {\r\n        if (this.state.gamesplayed === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.state.goals / this.state.gamesplayed;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>{this.props.playerInfo.firstName} {this.props.playerInfo.lastName} GP: {this.state.gamesplayed} G: {this.state.goals} G/GP: { this.goalspergame()}</div>\r\n    }\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react'\r\nimport Player from './Player'\r\n\r\nclass PlayerList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<ul>\r\n            {\r\n                this.props.players.map((player, index) => {\r\n                    return (<li><Player playerInfo={player}/></li>)\r\n                })\r\n            }\r\n        </ul>)\r\n    }\r\n}\r\n\r\nexport default PlayerList;","import React, { Component } from 'react'\r\nimport PlayerList from './PlayerList'\r\n\r\nclass PlayerLists extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div> Player Lists</div>\r\n                <ul>\r\n                    {\r\n                        this.props.sets.map((set) => {\r\n                            return(\r\n                                <li>\r\n                                <h2>List {set.id}</h2>\r\n                                <PlayerList players={set.players} />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default PlayerLists;","import React, { Component } from 'react'\r\nimport PlayerLists from './PlayerLists'\r\nimport axios from 'axios'\r\n\r\nclass TimmiesApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            sets: [],\r\n            errorMessage: \"\",\r\n        }\r\n\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Mount timmies app\");\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        const promise = axios.post(\"http://ec2-54-158-170-220.compute-1.amazonaws.com/api/v1/players\");\r\n        promise.then((response) => {\r\n            this.setState({ sets: response.data.sets, loading: false });\r\n        })\r\n            .catch(() => {\r\n                this.setState({ errorMessage: \"Something went wrong\" })\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        let display = <div>ok</div>\r\n\r\n        if (this.state.loading) {\r\n            display = <div><img src=\"https://miro.medium.com/max/882/1*9EBHIOzhE1XfMYoKz1JcsQ.gif\" alt=\"loading...\" /></div>\r\n        }\r\n        else if (this.state.errorMessage) {\r\n            display = <div>{this.state.errorMessage}</div>\r\n        }\r\n        else if (!this.state.sets) {\r\n            display = <div>No data available</div>;\r\n        }\r\n        else {\r\n            display = <div><PlayerLists sets={this.state.sets}/></div>\r\n        }\r\n        return (display);\r\n    }\r\n}\r\n\r\nexport default TimmiesApp;","import './App.css';\nimport TimmiesApp from './TimmiesApp'\n\nfunction App() {\n  return (\n      <div className=\"App\">\n\n          <header>\n            Timmies Helper App  \n          </header>\n          <div>\n              <TimmiesApp/>\n          </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}