{"version":3,"sources":["Player.js","PlayerList.js","PlayerLists.js","TimmiesApp.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","state","gamesplayed","goals","getGoalsPerGame","bind","getShotsPerGame","getGamesPlayed","getGoals","this","player","nhldata","gamesPlayed","toFixed","shots","firstName","lastName","position","Component","PlayerList","players","sort","a","b","reverse","map","index","className","key","PlayerLists","playerLists","set","id","TimmiesApp","loading","games","teams","errorMessage","loadTimmies","loadSetData","loadTeamData","getTeamAbbreviation","axios","post","then","response","setState","data","sets","catch","error","create","baseURL","withCredentials","headers","get","teamData","i","length","fullName","teamFullName","abbr","teamAbbr","console","log","selectedTeam","find","team","abbreviation","playerLink","playerId","playerData","newPlayerLists","playerList","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d84778db.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gamesplayed: 0,\r\n            goals : 0,\r\n        }\r\n\r\n        this.getGoalsPerGame = this.getGoalsPerGame.bind(this);\r\n        this.getShotsPerGame = this.getShotsPerGame.bind(this);\r\n        this.getGamesPlayed = this.getGamesPlayed.bind(this);\r\n        this.getGoals = this.getGoals.bind(this);\r\n    }\r\n\r\n    getGamesPlayed() {\r\n        if (this.props.player.nhldata) {\r\n            return this.props.player.nhldata.gamesPlayed;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getGoals() {\r\n        if (this.props.player.nhldata) {\r\n            return this.props.player.nhldata.goals;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getGoalsPerGame() {\r\n        if (!this.props.player.nhldata || this.props.player.nhldata.gamesPlayed === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (this.props.player.nhldata.goals / this.props.player.nhldata.gamesPlayed).toFixed(2);\r\n        }\r\n    }\r\n\r\n    getShotsPerGame() {\r\n        if (!this.props.player.nhldata || this.props.player.nhldata.gamesPlayed === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (this.props.player.nhldata.shots / this.props.player.nhldata.gamesPlayed).toFixed(2);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>{this.props.player.firstName} {this.props.player.lastName} - {this.props.player.position} GP: {this.getGamesPlayed()} G: {this.getGoals()} G/GP: {this.getGoalsPerGame()} Shots/GP: {this.getShotsPerGame()}</div>\r\n    }\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react'\r\nimport Player from './Player'\r\n\r\nclass PlayerList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<ul>\r\n            {\r\n                this.props.players\r\n                    .sort((a, b) => (a.nhldata ? a.nhldata.goals : 0) - (b.nhldata ? b.nhldata.goals : 0))\r\n                    .reverse()\r\n                    .map((player, index) => {\r\n                    return (<li className='app-list'  key={player.key}><Player player={player} /></li>)\r\n                    \r\n                })\r\n            }\r\n        </ul>)\r\n    }\r\n}\r\n\r\nexport default PlayerList;","import React, { Component } from 'react'\r\nimport PlayerList from './PlayerList'\r\n\r\nclass PlayerLists extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        this.props.playerLists.map((set) => {\r\n                            return(\r\n                                <li className='app-list' key={set.id} >\r\n                                    <h2>List {set.id}</h2>\r\n                                    <PlayerList players={set.players} />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default PlayerLists;","import React, { Component } from 'react'\r\nimport PlayerLists from './PlayerLists'\r\nimport teamData from './teams.json'\r\nimport axios from 'axios'\r\n\r\nclass TimmiesApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            playerLists: [{ id: \"1\", players: [] }, { id: \"2\", players: [] }, { id: \"3\", players: [] }],\r\n            games: null,\r\n            teams : [],\r\n            errorMessage: \"\",\r\n        }\r\n\r\n        this.loadTimmies = this.loadTimmies.bind(this);\r\n        this.loadSetData = this.loadSetData.bind(this);\r\n        this.loadTeamData = this.loadTeamData.bind(this);\r\n        this.getTeamAbbreviation = this.getTeamAbbreviation.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTimmies();\r\n        this.loadTeamData();\r\n    }\r\n\r\n    loadTimmies() {\r\n        const promise = axios.post(\"https://cors.bridged.cc/http://ec2-54-158-170-220.compute-1.amazonaws.com/api/v1/players\");\r\n        promise.then((response) => {\r\n            this.setState({ loading: false, games: response.data.games });\r\n            this.loadSetData(response.data.sets);\r\n        })\r\n            .catch((error) => {\r\n                this.setState({ errorMessage: \"Something went wrong. Error: \" + error })\r\n            });\r\n    }\r\n\r\n    loadTeamData() {\r\n        let nhlLink = \"https://cors.bridged.cc/https://api.nhle.com/stats/rest/en/team/summary?isAggregate=false&isGame=false&sort=%5B%7B%22property%22:%22points%22,%22direction%22:%22DESC%22%7D,%7B%22property%22:%22wins%22,%22direction%22:%22DESC%22%7D%5D&start=0&limit=50&factCayenneExp=gamesPlayed%3E=1&cayenneExp=gameTypeId=2%20and%20seasonId%3C=20202021%20and%20seasonId%3E=20202021\";\r\n        let instance = axios.create({\r\n            baseURL: nhlLink,\r\n            withCredentials: false,\r\n            headers: {\r\n            }\r\n        });\r\n        const promise = instance.get();\r\n        promise.then((response) => {\r\n            //go through each team and set it's abbreviation\r\n            let teamData = response.data.data;\r\n            for (let i = 0; i < teamData.length; i++) {\r\n                let fullName = teamData[i].teamFullName;                \r\n                let abbr = this.getTeamAbbreviation(fullName);\r\n                \r\n                teamData[i].teamAbbr = abbr;\r\n            }\r\n            console.log(teamData)\r\n            this.setState({ teams: teamData });\r\n\r\n        }).catch((error) => {\r\n                    console.log(\"Unable to get team stats from NHL website. Error: \" + error)\r\n                });\r\n    }\r\n\r\n    getTeamAbbreviation(teamFullName) {      \r\n        let selectedTeam = teamData.teams.find(team => team.fullName === teamFullName);\r\n        return selectedTeam ? selectedTeam.abbreviation : \"MTL\"; //if it can't find it, its because of special character in montreal\r\n    }\r\n\r\n\r\n    loadSetData(sets) {\r\n        sets.map((set) => {\r\n            set.players.map((player) =>{\r\n                let playerLink = \"https://cors.bridged.cc/https://api.nhle.com/stats/rest/en/skater/summary?cayenneExp=gameTypeId=2%20and%20seasonId%3E=20202021%20and%20skaterFullName%20likeIgnoreCase%20%22%25\" + player.firstName + \"%20\" + player.lastName + \"%25%22\";\r\n                let instance = axios.create({\r\n                    baseURL: playerLink,\r\n                    withCredentials: false,\r\n                    headers: {\r\n                    }\r\n                });\r\n                const promise = instance.get();\r\n                promise.then((response) => {\r\n                    const data = response.data.data[0];\r\n                    let key = player.firstName + player.lastName;\r\n                    if (data) {\r\n                        key = data.playerId\r\n                    }\r\n\r\n                    let playerData = { firstName: player.firstName, lastName: player.lastName, position : player.position, key: key, nhldata: data};\r\n\r\n                    //shallow copy of entire array\r\n                    let newPlayerLists = [...this.state.playerLists];\r\n                    let playerList = newPlayerLists[set.id - 1];\r\n                    playerList.players = [...playerList.players, playerData]\r\n                    this.setState({ playerLists: newPlayerLists });\r\n                }).catch((error) => {\r\n                    console.log(\"Player get didn't work for \" + player.firstName + \" \" + player.lastName + \". Error: \" + error)\r\n                });\r\n            });     \r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let display = <div>ok</div>\r\n\r\n        if (this.state.loading) {\r\n            display = <div><img src=\"https://miro.medium.com/max/882/1*9EBHIOzhE1XfMYoKz1JcsQ.gif\" alt=\"loading...\" /></div>\r\n        }\r\n        else if (this.state.errorMessage) {\r\n            display = <div>{this.state.errorMessage}</div>\r\n        }\r\n        else {\r\n            display = <div><PlayerLists playerLists={this.state.playerLists} games={this.state.games}/></div>\r\n        }\r\n        return (display);\r\n    }\r\n}\r\n\r\nexport default TimmiesApp;","import './App.css';\r\nimport TimmiesApp from './TimmiesApp'\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n\r\n          <header>\r\n            Timmies Helper App  \r\n          </header>\r\n          <div>\r\n              <TimmiesApp/>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}