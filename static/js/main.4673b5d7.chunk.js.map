{"version":3,"sources":["Player.js","PlayerList.js","PlayerLists.js","TimmiesApp.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","state","gamesplayed","goals","getGoalsPerGame","bind","getGamesPlayed","getGoals","this","player","nhldata","gamesPlayed","toFixed","firstName","lastName","Component","PlayerList","players","sort","a","b","reverse","map","index","className","key","PlayerLists","playerLists","set","id","TimmiesApp","loading","errorMessage","loadTimmies","loadSetData","axios","post","then","response","setState","data","sets","catch","error","playerLink","create","baseURL","withCredentials","headers","get","playerId","playerData","newPlayerLists","playerList","console","log","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4673b5d7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gamesplayed: 0,\r\n            goals : 0,\r\n        }\r\n\r\n        this.getGoalsPerGame = this.getGoalsPerGame.bind(this);\r\n        this.getGamesPlayed = this.getGamesPlayed.bind(this);\r\n        this.getGoals = this.getGoals.bind(this);\r\n    }\r\n\r\n    getGamesPlayed() {\r\n        if (this.props.player.nhldata) {\r\n            return this.props.player.nhldata.gamesPlayed;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getGoals() {\r\n        if (this.props.player.nhldata) {\r\n            return this.props.player.nhldata.goals;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getGoalsPerGame() {\r\n        if (!this.props.player.nhldata || this.props.player.nhldata.gamesPlayed === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (this.props.player.nhldata.goals / this.props.player.nhldata.gamesPlayed).toFixed(2);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>{this.props.player.firstName} {this.props.player.lastName} GP: {this.getGamesPlayed()} G: {this.getGoals()} G/GP: {this.getGoalsPerGame()}</div>\r\n    }\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react'\r\nimport Player from './Player'\r\n\r\nclass PlayerList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<ul>\r\n            {\r\n                this.props.players\r\n                    .sort((a, b) => (a.nhldata ? a.nhldata.goals : 0) - (b.nhldata ? b.nhldata.goals : 0))\r\n                    .reverse()\r\n                    .map((player, index) => {\r\n                    return (<li className='app-list'  key={player.key}><Player player={player} /></li>)\r\n                    \r\n                })\r\n            }\r\n        </ul>)\r\n    }\r\n}\r\n\r\nexport default PlayerList;","import React, { Component } from 'react'\r\nimport PlayerList from './PlayerList'\r\n\r\nclass PlayerLists extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        this.props.playerLists.map((set) => {\r\n                            return(\r\n                                <li className='app-list' key={set.id} >\r\n                                    <h2>List {set.id}</h2>\r\n                                    <PlayerList players={set.players} />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default PlayerLists;","import React, { Component } from 'react'\r\nimport PlayerLists from './PlayerLists'\r\nimport axios from 'axios'\r\n\r\nclass TimmiesApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            playerLists: [{ id: \"1\", players: [] }, { id: \"2\", players: [] }, { id: \"3\", players: []}],\r\n            errorMessage: \"\",\r\n        }\r\n\r\n        this.loadTimmies = this.loadTimmies.bind(this);\r\n        this.loadSetData = this.loadSetData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTimmies();\r\n    }\r\n\r\n    loadTimmies() {\r\n        const promise = axios.post(\"https://cors.bridged.cc/http://ec2-54-158-170-220.compute-1.amazonaws.com/api/v1/players\");\r\n        promise.then((response) => {\r\n            this.setState({ loading: false });\r\n            this.loadSetData(response.data.sets);\r\n        })\r\n            .catch((error) => {\r\n                this.setState({ errorMessage: \"Something went wrong. Error: \" + error })\r\n            });\r\n    }\r\n\r\n    loadSetData(sets) {\r\n        sets.map((set) => {\r\n            set.players.map((player) =>{\r\n                let playerLink = \"https://cors.bridged.cc/https://api.nhle.com/stats/rest/en/skater/summary?cayenneExp=gameTypeId=2%20and%20seasonId%3E=20202021%20and%20skaterFullName%20likeIgnoreCase%20%22%25\" + player.firstName + \"%20\" + player.lastName + \"%25%22\";\r\n                let instance = axios.create({\r\n                    baseURL: playerLink,\r\n                    withCredentials: false,\r\n                    headers: {\r\n                    }\r\n                });\r\n                const promise = instance.get();\r\n                promise.then((response) => {\r\n                    const data = response.data.data[0];\r\n                    let key = player.firstName + player.lastName;\r\n                    if (data) {\r\n                        key = data.playerId\r\n                    }\r\n\r\n                    let playerData = { firstName: player.firstName, lastName: player.lastName, key: key, nhldata: data};\r\n\r\n                    //shallow copy of entire array\r\n                    let newPlayerLists = [...this.state.playerLists];\r\n                    let playerList = newPlayerLists[set.id - 1];\r\n                    playerList.players = [...playerList.players, playerData]\r\n                    this.setState({ playerLists: newPlayerLists });\r\n                }).catch((error) => {\r\n                    console.log(\"Player get didn't work for \" + player.firstName + \" \" + player.lastName + \". Error: \" + error)\r\n                });\r\n            });     \r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let display = <div>ok</div>\r\n\r\n        if (this.state.loading) {\r\n            display = <div><img src=\"https://miro.medium.com/max/882/1*9EBHIOzhE1XfMYoKz1JcsQ.gif\" alt=\"loading...\" /></div>\r\n        }\r\n        else if (this.state.errorMessage) {\r\n            display = <div>{this.state.errorMessage}</div>\r\n        }\r\n        else {\r\n            display = <div><PlayerLists playerLists={this.state.playerLists}/></div>\r\n        }\r\n        return (display);\r\n    }\r\n}\r\n\r\nexport default TimmiesApp;","import './App.css';\r\nimport TimmiesApp from './TimmiesApp'\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n\r\n          <header>\r\n            Timmies Helper App  \r\n          </header>\r\n          <div>\r\n              <TimmiesApp/>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}